{"remainingRequest":"C:\\MAMP\\htdocs\\smart city\\Smart-City\\city-report\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\MAMP\\htdocs\\smart city\\Smart-City\\city-report\\src\\components\\PhotoCapture.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\MAMP\\htdocs\\smart city\\Smart-City\\city-report\\src\\components\\PhotoCapture.vue","mtime":1540087696458},{"path":"C:\\MAMP\\htdocs\\smart city\\Smart-City\\city-report\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540087859723},{"path":"C:\\MAMP\\htdocs\\smart city\\Smart-City\\city-report\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\MAMP\\htdocs\\smart city\\Smart-City\\city-report\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1540087859723},{"path":"C:\\MAMP\\htdocs\\smart city\\Smart-City\\city-report\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n\r\n/* eslint-disable */\r\nexport default {\r\n  name: \"PhotoCapture\",\r\n\r\n  data() {\r\n    return {\r\n      cameraList: [],\r\n      selectedCameraIdx: 0,\r\n      image: null\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    camera() {\r\n      return this.cameraList[this.selectedCameraIdx];\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.videoElement = this.$refs.video;\r\n    navigator.mediaDevices\r\n      .enumerateDevices()\r\n      .then(this.gotDevices)\r\n      .then(this.getStream)\r\n      .catch(this.handleError);\r\n  },\r\n\r\n  methods: {\r\n    gotDevices(infos) {\r\n      infos.forEach(info => {\r\n        if (info.kind === \"videoinput\") {\r\n          this.cameraList.push(info.deviceId);\r\n        }\r\n      });\r\n      this.selectedCameraIdx = this.cameraList.length - 1;\r\n    },\r\n\r\n    getStream() {\r\n      if (window.stream) {\r\n        window.stream.getTracks().forEach(track => {\r\n          track.stop();\r\n        });\r\n      }\r\n\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          video: {\r\n            deviceId: { exact: this.camera }\r\n          }\r\n        })\r\n        .then(this.gotStream)\r\n        .catch(this.handleError);\r\n    },\r\n\r\n    gotStream(stream) {\r\n      window.stream = stream;\r\n      this.videoElement.srcObject = stream;\r\n    },\r\n\r\n    handleError(error) {\r\n      console.log(\"Error: \", error);\r\n    },\r\n\r\n    getImage() {\r\n      let canvas = document.createElement('canvas')\r\n      let context = canvas.getContext('2d')\r\n      canvas.width = this.videoElement.clientWidth\r\n      canvas.height = this.videoElement.clientHeight\r\n      context.drawImage(this.videoElement, 0, 0, canvas.width, canvas.height)\r\n      this.image = canvas.toDataURL()\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["PhotoCapture.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PhotoCapture.vue","sourceRoot":"src\\components","sourcesContent":["<template>\r\n  <div class=\"photo-capture\">\r\n    <video muted autoplay ref=\"video\"></video>\r\n    <div class=\"photo\" @click=\"getImage\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n/* eslint-disable */\r\nexport default {\r\n  name: \"PhotoCapture\",\r\n\r\n  data() {\r\n    return {\r\n      cameraList: [],\r\n      selectedCameraIdx: 0,\r\n      image: null\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    camera() {\r\n      return this.cameraList[this.selectedCameraIdx];\r\n    }\r\n  },\r\n\r\n  mounted() {\r\n    this.videoElement = this.$refs.video;\r\n    navigator.mediaDevices\r\n      .enumerateDevices()\r\n      .then(this.gotDevices)\r\n      .then(this.getStream)\r\n      .catch(this.handleError);\r\n  },\r\n\r\n  methods: {\r\n    gotDevices(infos) {\r\n      infos.forEach(info => {\r\n        if (info.kind === \"videoinput\") {\r\n          this.cameraList.push(info.deviceId);\r\n        }\r\n      });\r\n      this.selectedCameraIdx = this.cameraList.length - 1;\r\n    },\r\n\r\n    getStream() {\r\n      if (window.stream) {\r\n        window.stream.getTracks().forEach(track => {\r\n          track.stop();\r\n        });\r\n      }\r\n\r\n      navigator.mediaDevices\r\n        .getUserMedia({\r\n          video: {\r\n            deviceId: { exact: this.camera }\r\n          }\r\n        })\r\n        .then(this.gotStream)\r\n        .catch(this.handleError);\r\n    },\r\n\r\n    gotStream(stream) {\r\n      window.stream = stream;\r\n      this.videoElement.srcObject = stream;\r\n    },\r\n\r\n    handleError(error) {\r\n      console.log(\"Error: \", error);\r\n    },\r\n\r\n    getImage() {\r\n      let canvas = document.createElement('canvas')\r\n      let context = canvas.getContext('2d')\r\n      canvas.width = this.videoElement.clientWidth\r\n      canvas.height = this.videoElement.clientHeight\r\n      context.drawImage(this.videoElement, 0, 0, canvas.width, canvas.height)\r\n      this.image = canvas.toDataURL()\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n.photo-capture {\r\n  video {\r\n    position: fixed;\r\n    right: 0;\r\n    bottom: 0;\r\n    min-width: 100%;\r\n    min-height: 100%;\r\n    background-color: #353535;\r\n  }\r\n\r\n  .photo {\r\n    position: fixed;\r\n    bottom: 3em;\r\n    left: 50%;\r\n    margin-left: -3em;\r\n    height: 6em;\r\n    width: 6em;\r\n    border-radius: 6em;\r\n    border: solid 0.5em #fff;\r\n    background-color: #7b50ff;\r\n    cursor: pointer;\r\n  }\r\n}\r\n</style>\r\n"]}]}